// <auto-generated />
using System;
using DataInsights.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataInsights.API.Migrations
{
    [DbContext(typeof(SQLDatabase))]
    partial class SQLDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataInsights.API.Models.Customer", b =>
                {
                    b.Property<int>("_customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_customerID"));

                    b.Property<string>("_customerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_customerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_customerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataInsights.API.Models.Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Product_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataInsights.API.Models.Sale", b =>
                {
                    b.Property<int>("Sales_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sales_ID"));

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_customerID")
                        .HasColumnType("int");

                    b.Property<int?>("Product_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total_Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Sales_ID");

                    b.HasIndex("Customer_customerID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("DataInsights.API.Models.Sale", b =>
                {
                    b.HasOne("DataInsights.API.Models.Customer", "Customer")
                        .WithMany("_sales")
                        .HasForeignKey("Customer_customerID");

                    b.HasOne("DataInsights.API.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("Product_ID");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataInsights.API.Models.Customer", b =>
                {
                    b.Navigation("_sales");
                });

            modelBuilder.Entity("DataInsights.API.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
